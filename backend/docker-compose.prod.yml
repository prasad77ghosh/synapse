version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: kong_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - synapse-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "app_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - synapse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:3.6
    container_name: kong-migration
    command: >
      sh -c "kong migrations bootstrap || (kong migrations up && kong migrations finish)"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong_db
      KONG_PG_USER: app_user
      KONG_PG_PASSWORD: app_password
    depends_on:
      - postgres
    networks:
      - synapse-network
    restart: "no"

  kong:
    image: kong:3.6
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong_db
      KONG_PG_USER: app_user
      KONG_PG_PASSWORD: app_password
      KONG_PROXY_LISTEN: 0.0.0.0:8000,0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001,0.0.0.0:8444 ssl
      KONG_PLUGINS: bundled,jwt,rate-limiting,cors,request-transformer,response-transformer
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    depends_on:
      kong-migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    networks:
      - synapse-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  synapse-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
