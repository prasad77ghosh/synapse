version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - synapse-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "app_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7-jammy
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_password
      MONGO_INITDB_DATABASE: app_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - synapse-network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - synapse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong:
    image: kong:3.6
    container_name: kong
    environment:
      KONG_DATABASE: "off" # DB-less mode
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      # Include all plugins used in kong.yml
      KONG_PLUGINS: bundled,jwt,rate-limiting,cors,request-transformer,response-transformer
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./services/api-gateway/config/kong.yml:/kong/declarative/kong.yml:ro
    networks:
      - synapse-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  synapse-network:
    driver: bridge

volumes:
  postgres-data:
  mongodb-data:
  redis-data:
